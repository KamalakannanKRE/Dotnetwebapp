
name: 'Terraform-Azure'

on:
  push:
    branches:
    - main
  pull_request:


jobs:
  setup: 
    runs-on: ubuntu-latest
    env: 
      ROOT_PATH: '${{github.workspace}}/actions/terraform-azure'
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}

  terraform_plan:
    name: 'Terraform'
    runs-on: ubuntu-latest
    needs: setup
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    # - uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}

    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: Terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}
      

  terraform_apply:
    name: 'Terraform apply'
    needs: [setup,terraform_apply]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
 
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: ${{ env.ROOT_PATH }}
